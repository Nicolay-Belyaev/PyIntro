# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.

# ¬ -> not
# ⋁ -> or
# ⋀ -> and
# =>
# ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z <=> not(X or Y or Z) = (not X) and (not Y) and (not Z)

# Если бы придумал, как заполнять состояния автоматически, можно было бы масштабировать для любого кол-ва предикатов.
list_of_conditions = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 0], [1, 0, 1], [0, 1, 1], [1, 1, 1]]

for cond in list_of_conditions:
    logicka = ((not(cond[0] or cond[1] or cond[2])) == ((not cond[0]) and (not cond[1]) and (not cond[2])))
    print(logicka)

# Масштабирование этой задача для произвольного числа предикатов в целом отдельная задача.